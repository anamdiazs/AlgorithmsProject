<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gjGYLiCBAEAQBAEAQBAEAQBAP//Z
</value>
  </data>
</root>